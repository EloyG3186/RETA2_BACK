const { sequelize, Category } = require('../models');

/**
 * Script to seed default categories in the database
 */

const defaultCategories = [
  {
    name: 'Deportes',
    description: 'Desaf√≠os relacionados con actividades deportivas y ejercicio f√≠sico',
    icon: 'üèÉ',
    isActive: true
  },
  {
    name: 'Estudio', 
    description: 'Desaf√≠os educativos y de aprendizaje',
    icon: 'üìö',
    isActive: true
  },
  {
    name: 'Salud',
    description: 'Desaf√≠os relacionados con bienestar y salud',
    icon: 'üí™',
    isActive: true
  },
  {
    name: 'Creatividad',
    description: 'Desaf√≠os art√≠sticos y creativos', 
    icon: 'üé®',
    isActive: true
  },
  {
    name: 'Videojuegos',
    description: 'Desaf√≠os relacionados con gaming y videojuegos',
    icon: 'üéÆ',
    isActive: true
  },
  {
    name: 'Tecnolog√≠a',
    description: 'Desaf√≠os de desarrollo, programaci√≥n y tecnolog√≠a',
    icon: 'üíª',
    isActive: true
  }
];

async function seedCategories() {
  console.log('üå± Starting category seeding...');
  
  // Test database connection
  try {
    await sequelize.authenticate();
    console.log('‚úÖ Database connection successful');
  } catch (error) {
    console.error('‚ùå Database connection failed:', error);
    throw error;
  }
  
  try {
    let createdCount = 0;
    let existingCount = 0;
    
    for (const categoryData of defaultCategories) {
      // Check if category already exists
      const existingCategory = await Category.findOne({
        where: { name: categoryData.name }
      });
      
      if (existingCategory) {
        console.log(`‚è≠Ô∏è  Category "${categoryData.name}" already exists`);
        existingCount++;
      } else {
        // Create new category
        await Category.create(categoryData);
        console.log(`‚úÖ Created category: ${categoryData.name}`);
        createdCount++;
      }
    }
    
    console.log(`\nüìà Summary:`);
    console.log(`   ‚úÖ Created: ${createdCount} categories`);
    console.log(`   ‚è≠Ô∏è  Already existed: ${existingCount} categories`);
    console.log(`\nüéâ Category seeding completed!`);
    
  } catch (error) {
    console.error('‚ùå Error during category seeding:', error);
    throw error;
  }
}

// Run the script if called directly
if (require.main === module) {
  seedCategories()
    .then(() => {
      console.log('‚úÖ Script completed successfully');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Script failed:', error);
      process.exit(1);
    });
}

module.exports = { seedCategories };
